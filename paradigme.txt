let f =function (x,y) -> x+y ;;
ou
let add x y = x+y ;;
add 5 7 ;;




let rec somme = function x -> if (x == 0) then 0 else x+ somme(x-1);;
val somme : int -> int = <fun>
# somme(2);;
- : int = 3
# let rec fact = function x -> if (x == 0) then 1 else x * fact(x-1);;
val fact : int -> int = <fun>
# fact(2);;
- : int = 2


let moy = function (x,y) -> (x+.y)/.2. ;; 
val moy : float * float -> float = <fun>
# moy(1.,2.);;
- : float = 1.5



let  rec pgcd = function (x,y) -> if (x>y) then pgcd ((x-y),y) else if (x<y) then pgcd(x,(y-x)) else x ;;
val pgcd : int * int -> int = <fun>
# pgcd(3,9);;


curryfication

let  rec pgcd = function (x) -> (function y -> if (x>y) then pgcd (x-y) y else if (x<y) then pgcd x (y-x) else y) ;;
val pgcd : int -> int -> int = <fun>